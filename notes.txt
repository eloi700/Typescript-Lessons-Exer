**  Installation of Typescript (Nodejs.org - Node Package Manager)
    npm i -g typescript

**  Typescript Version (4.8.3)
    tsc -v

**  Open Terminal Window (Ctrl-`(Backtick))

**  Compile Using Typescript Compiler
    tsc index.ts

**  Configure Typescript Compiler to target a Newer JS Version
    In this, it creates a new tsconfig.json with target es2016 etc.
    tsc --init

**  in tsconfig.json - "target": "es2016" remove and press Ctrl+Space, it
    will show the other availabe valid - esVersion.

**  IMPORTANT SETTINGS TO CONFIGURE IN tsconfig.json
**  /* Modules */---Ctrl + / - Remove the // in tsconfig.json.
    Example: rootDir: "./" represents the Current Folder (./), Sub-Folder (./src) -> Parent is helloworld and Child is src

**  */EMIT*/ --/ "outDir": "./"--Specify an output folder for all
    emitted  (JS) files. Example: "outDir": "./dist"

**  "removeComments": true, - ENABLING this from EMIT will remove the
    comments from TS.

**  "noEmitOnError": true, ENABLING this will NOT GENERATE JS if there's
    ERROR in Typescript

**  DEBUGGING TYPESCRIPT IN VS CODE
**  "sourceMap": true, - ENABLING this from EMIT will specify how each line of the Typescript code MAPS to the generated JS Code. (index.js.map)
**  Insert / Click a BreakPoint in index.ts file (color red before the line number).
**  Click the Debug Panel the Right s Icon left (Ctrl+Shift+D).
**  Click under Run and Debug the CREATE A LAUNCH.JSON FILE then NODE.JS to create LAUNCH.JSON file.
**  From launch.json file, under PROGRAM, add below line:
    "preLaunchTask": "tsc: build - tsconfig.json",
    which means that VS Code will use the TS Compiler to Build the Application using this configuration file.
**  Go back to index.ts file and click the Launch Program Play shortcut above.

**  TYPESCRIPT BUILT-IN TYPES
**  any - a variable not been annotated or initialize with value. Example: let level; ---NO NO TYPE
**  arrays
**  unknown
**  never
**  arrays
**  enum
**  tuple

**  In Typescript a number can be separated by UNDERSCORE(_) to make it readable. Example: 123_456_789

**  There's no need to ANNOTATE always the variable.  The TS compiler can infer or detect the type of the variable based on a value. Example: let sales = 123_456_789 (hover in sales, it shows a number).

**  Ctrl + P - to go to Search

**  tsconfig.json - "noImplicitAny": true, compiler will complain IMPLICIT any tags otherwise if it is false, the compiler will show only a 3 dots under on it. CAUTION: comment it or use it if you know what you are doing :)

**  node is a js engine to run js application - example command to run
    node helloworld/dist/index.js

**  Windows Build - Build a JS file - Ctrl+Shift+B or
**  tsc -p ./helloworld/tsconfig (Typescript Compiler of Project)

**  TURN ON - "noUnusedParameters": true, /* Raise an error when a function parameter isn't read. */

**  TURN ON - "noImplicitReturns": true,  /* Enable error reporting for codepaths that do not explicitly return in a function. */

**  TURN ON - // "noUnusedLocals": true,  /* Enable error reporting when local variables aren't read. -UNUSED VARIABLES*/

**  adding ? at the end of the variable makes it Optional
    example - taxYear?:number ... if((taxYear || 2022) < 2022) or
    taxYear = 2022 : number however ... if(taxYear < 2022)

